apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-proxmox
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/part-of: cluster-api-provider-proxmox
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    application.giantswarm.io/branch: '{{ .Values.project.branch }}'
    application.giantswarm.io/commit: '{{ .Values.project.commit }}'
    cluster.x-k8s.io/provider: infrastructure-proxmox
    control-plane: controller-manager
    helm.sh/chart: '{{ .Chart.Name }}'
  name: capmox-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-proxmox
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: infrastructure-proxmox
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --feature-gates=ClusterTopology={{ .Values.featureGates.ClusterTopology
          }}
        - --metrics-bind-address=localhost:8080
        - --v=6
        env:
        - name: PROXMOX_URL
          valueFrom:
            secretKeyRef:
              key: url
              name: capmox-manager-credentials
        - name: PROXMOX_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: capmox-manager-credentials
        - name: PROXMOX_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: capmox-manager-credentials
        image: '{{.Values.image.name}}:{{.Values.image.tag}}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: '{{ .Values.resources.limits.cpu }}'
            memory: '{{ .Values.resources.limits.memory }}'
          requests:
            cpu: '{{ .Values.resources.requests.cpu }}'
            memory: '{{ .Values.resources.requests.memory }}'
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      priorityClassName: '{{ .Values.priorityClass }}'
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capmox-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
